/* stylelint-disable */
@use "sass:map";
@use "../config";
@use "../variables" as vars;

$_breakpoints: map-get(vars.$tokens, 'breakpoint');
$_typography: map-get(vars.$tokens, 'typography');

/**************************************************************************

    Font Size Utilities
    =================

    Generates Utility classes for font size.

**************************************************************************/



@each $_breakpoint, $_breakpoint-val in $_breakpoints {
  @each $_shortname, $_value in $_typography {
    @if $_breakpoint == 'root' {
      .#{config.$utility-ns}text-#{$_shortname} {
        font-size: $_value !important;
      }
    } @else {
      @media only screen and (min-width: map.get($_breakpoint-val, 'breakpoint')) {
        .#{$_breakpoint}\:#{config.$utility-ns}text-#{$_shortname} {
          font-size: $_value !important;
        }
      }
    }
  }
}



/**************************************************************************

    Text Aligning Utilities

**************************************************************************/

@mixin textSharedStyles {
  &-left {
    text-align: left !important;
  }
  &-center {
    text-align: center !important;
  }
  &-right {
    text-align: right !important;
  }
}

@each $_breakpoint, $_breakpoint-val in $_breakpoints {
  @if $_breakpoint == 'root' {
    .#{config.$utility-ns}text {
      @include textSharedStyles;
    }
  } @else {
    @media only screen and (min-width: map-get($_breakpoint-val, 'breakpoint')) {
      .#{$_breakpoint}\:#{config.$utility-ns}text {
          @include textSharedStyles;
      }
    }
  }
}
